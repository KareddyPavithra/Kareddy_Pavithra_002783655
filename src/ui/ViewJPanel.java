/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.HashSet;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Employee;
import model.EmployeeHistory;

/**
 *
 * @author pavit
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    EmployeeHistory history;
    public ViewJPanel(EmployeeHistory history) {
        initComponents();
        this.history = history;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName = new javax.swing.JLabel();
        txtEmployeeId = new javax.swing.JTextField();
        lblEmployeeId = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        txtGender = new javax.swing.JTextField();
        lblStartDate = new javax.swing.JLabel();
        txtStartDate = new javax.swing.JTextField();
        lblLevel = new javax.swing.JLabel();
        txtLevel = new javax.swing.JTextField();
        lblTeamInfo = new javax.swing.JLabel();
        txtTeamInfo = new javax.swing.JTextField();
        lblPositionTitle = new javax.swing.JLabel();
        txtPositionTitle = new javax.swing.JTextField();
        lblContactInfo = new javax.swing.JLabel();
        txtCellPhoneNumber = new javax.swing.JTextField();
        lblCellPhoneNumber = new javax.swing.JLabel();
        txtEmailAddress = new javax.swing.JTextField();
        lblEmailAddress = new javax.swing.JLabel();
        jDialog1 = new javax.swing.JDialog();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblName1 = new javax.swing.JLabel();
        txtEmployeeId1 = new javax.swing.JTextField();
        lblEmployeeId1 = new javax.swing.JLabel();
        txtName1 = new javax.swing.JTextField();
        lblAge1 = new javax.swing.JLabel();
        txtAge1 = new javax.swing.JTextField();
        lblGender1 = new javax.swing.JLabel();
        txtGender1 = new javax.swing.JTextField();
        lblStartDate1 = new javax.swing.JLabel();
        txtStartDate1 = new javax.swing.JTextField();
        lblLevel1 = new javax.swing.JLabel();
        txtLevel1 = new javax.swing.JTextField();
        lblTeamInfo1 = new javax.swing.JLabel();
        txtTeamInfo1 = new javax.swing.JTextField();
        lblPositionTitle1 = new javax.swing.JLabel();
        txtPositionTitle1 = new javax.swing.JTextField();
        lblContactInfo1 = new javax.swing.JLabel();
        txtCellPhoneNumber1 = new javax.swing.JTextField();
        lblCellPhoneNumber1 = new javax.swing.JLabel();
        txtEmailAddress1 = new javax.swing.JTextField();
        lblEmailAddress1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        lblIImage = new javax.swing.JLabel();

        lblName.setText("Name:");

        lblEmployeeId.setText("Employee Id:");

        lblAge.setText("Age:");

        lblGender.setText("Gender:");

        lblStartDate.setText("StartDate:");

        lblLevel.setText("Level:");

        lblTeamInfo.setText("Team Info:");

        lblPositionTitle.setText("Position Title:");

        lblContactInfo.setText("Contact Info:");

        lblCellPhoneNumber.setText("Cell Phone Number:");

        lblEmailAddress.setText("Email-Address:");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        lblTitle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("View");

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Employee ID", "Age", "Gender", "Start Date", "Level", "Team Info", "Position Title", "Cell Phone Number", "Email-Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmployee);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblName1.setText("Name:");

        lblEmployeeId1.setText("Employee Id:");

        lblAge1.setText("Age:");

        lblGender1.setText("Gender:");

        lblStartDate1.setText("StartDate:");

        lblLevel1.setText("Level:");

        lblTeamInfo1.setText("Team Info:");

        lblPositionTitle1.setText("Position Title:");

        lblContactInfo1.setText("Contact Info:");

        lblCellPhoneNumber1.setText("Cell Phone Number:");

        lblEmailAddress1.setText("Email-Address:");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnView)
                .addGap(8, 8, 8)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblEmployeeId1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblName1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblAge1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblGender1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblStartDate1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblLevel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblTeamInfo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblPositionTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblContactInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 195, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmployeeId1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAge1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtGender1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtStartDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTeamInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPositionTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblEmailAddress1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblCellPhoneNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(125, 125, 125)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtCellPhoneNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmailAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(74, 74, 74))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblIImage, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnSearch, btnView});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnSearch)
                    .addComponent(btnDelete)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName1)
                    .addComponent(txtName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmployeeId1)
                    .addComponent(txtEmployeeId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge1)
                    .addComponent(txtAge1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender1)
                    .addComponent(txtGender1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStartDate1)
                    .addComponent(txtStartDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLevel1)
                    .addComponent(txtLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTeamInfo1)
                    .addComponent(txtTeamInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPositionTitle1)
                    .addComponent(txtPositionTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblContactInfo1)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCellPhoneNumber1)
                    .addComponent(txtCellPhoneNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmailAddress1)
                    .addComponent(txtEmailAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblIImage, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblEmployee.getSelectedRow();
        
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        Employee selectedEmploy = (Employee) model.getValueAt(selectedRowIndex, 0);
        
        history.deleteEmployee(selectedEmploy);
        txtName1.setText("");
        txtEmployeeId1.setText("");
        txtAge1.setText("");
        txtGender1.setText("");
        txtStartDate1.setText("");
        txtLevel1.setText("");
        txtTeamInfo1.setText("");
        txtPositionTitle1.setText("");
        txtCellPhoneNumber1.setText("");
        txtEmailAddress1.setText("");
        lblIImage.setIcon(null);
        JOptionPane.showMessageDialog(this,"Employee deleted.");
        
        
        populateTable();
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblEmployee.getSelectedRow();
        
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a row to view.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        Employee selectedEmploy = (Employee) model.getValueAt(selectedRowIndex, 0);
        
        
        
        txtName1.setText((selectedEmploy.getName()));
        txtEmployeeId1.setText(String.valueOf(selectedEmploy.getEmployeeId()));
        txtAge1.setText(String.valueOf(selectedEmploy.getAge()));
        txtGender1.setText((selectedEmploy.getGender()));
        txtStartDate1.setText((selectedEmploy.getStartDate()));
        txtLevel1.setText(String.valueOf(selectedEmploy.getLevel()));
        txtTeamInfo1.setText((selectedEmploy.getTeamInfo()));
        txtPositionTitle1.setText((selectedEmploy.getPositionTitle()));
        txtCellPhoneNumber1.setText(String.valueOf(selectedEmploy.getCellPhoneNumber()));
        txtEmailAddress1.setText((selectedEmploy.getEmailAddress()));
        lblIImage.setIcon(selectedEmploy.getPhoto());
        
         
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
       ////JOptionPane.showInputDialog(this, "Enter value to search");
       //String searchtext = txtSearch.getText();
        //EmployeeHistory searchi = new EmployeeHistory();
        //if(name.isSelected())
            //for(Employee ee : history.getHistory()){
                //if (ee.getName().equals(searchtext)){
                    //searchi.getHistory().add(ee);
                //}
            //}
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        String search = txtSearch.getText().toLowerCase();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tblEmployee.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
        
                          
    }//GEN-LAST:event_txtSearchKeyReleased

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        String Name = model.getValueAt(tblEmployee.getSelectedRow(), 0).toString();
        String EmployeeId = model.getValueAt(tblEmployee.getSelectedRow(), 1).toString();
        String Age = model.getValueAt(tblEmployee.getSelectedRow(), 2).toString();
        String Gender = model.getValueAt(tblEmployee.getSelectedRow(), 3).toString();
        String StartDate = model.getValueAt(tblEmployee.getSelectedRow(), 4).toString();
        String Level = model.getValueAt(tblEmployee.getSelectedRow(), 5).toString();
        String TeamInfo = model.getValueAt(tblEmployee.getSelectedRow(), 6).toString();
        String PositionTitle = model.getValueAt(tblEmployee.getSelectedRow(), 7).toString();
        String CellPhoneNumber = model.getValueAt(tblEmployee.getSelectedRow(), 8).toString();
        String EmailAddress = model.getValueAt(tblEmployee.getSelectedRow(), 9).toString();
                       
        
        txtName1.setText(Name);
        txtEmployeeId1.setText(EmployeeId);
        txtAge1.setText(Age);
        txtGender1.setText(Gender);
        txtStartDate1.setText(StartDate);
        txtLevel1.setText(Level);
        txtTeamInfo1.setText(TeamInfo);
        txtPositionTitle1.setText(PositionTitle);
        txtCellPhoneNumber1.setText(CellPhoneNumber);
        txtEmailAddress1.setText(EmailAddress);
        
    }//GEN-LAST:event_tblEmployeeMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
     
        if(tblEmployee.getSelectedRowCount() == 1){
            
        Employee selectedEmploy = (Employee) model.getValueAt(tblEmployee.getSelectedRow(), 0);
        String name = txtName1.getText();
        int employeeId = Integer.parseInt(txtEmployeeId1.getText());
        int age = Integer.parseInt(txtAge1.getText());
        String gender = txtGender1.getText();
        String startDate = txtStartDate1.getText();
        int level = Integer.parseInt(txtLevel1.getText());
        String teamInfo = txtTeamInfo1.getText();
        String positionTitle = txtPositionTitle1.getText();
        int cellPhoneNumber = Integer.parseInt(txtCellPhoneNumber1.getText());
        String emailAddress = txtEmailAddress1.getText();
        
        model.setValueAt(name, tblEmployee.getSelectedRow(), 0);
        model.setValueAt(employeeId, tblEmployee.getSelectedRow(), 1);
        model.setValueAt(age, tblEmployee.getSelectedRow(), 2);
        model.setValueAt(gender, tblEmployee.getSelectedRow(), 3);
        model.setValueAt(startDate, tblEmployee.getSelectedRow(), 4);
        model.setValueAt(level, tblEmployee.getSelectedRow(), 5);
        model.setValueAt(teamInfo, tblEmployee.getSelectedRow(), 6);
        model.setValueAt(positionTitle, tblEmployee.getSelectedRow(), 7);
        model.setValueAt(cellPhoneNumber, tblEmployee.getSelectedRow(), 8);
        model.setValueAt(emailAddress, tblEmployee.getSelectedRow(), 9);
        
        selectedEmploy.setName(name);
        selectedEmploy.setEmployeeId(employeeId);
        selectedEmploy.setAge(age);
        selectedEmploy.setGender(gender);
        selectedEmploy.setStartDate(startDate);
        selectedEmploy.setLevel(level);
        selectedEmploy.setTeamInfo(teamInfo);
        selectedEmploy.setPositionTitle(positionTitle);
        selectedEmploy.setCellPhoneNumber(cellPhoneNumber);
        selectedEmploy.setEmailAddress(emailAddress);
        
        
        JOptionPane.showMessageDialog(this, "Details updated");
        }
        else{
            if(tblEmployee.getRowCount() ==0){
                JOptionPane.showMessageDialog(this, "Table is empty");
            }else{
                JOptionPane.showMessageDialog(this, "Select a row to update");
            }
              
        }
       
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
        //
            
    }//GEN-LAST:event_txtSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAge1;
    private javax.swing.JLabel lblCellPhoneNumber;
    private javax.swing.JLabel lblCellPhoneNumber1;
    private javax.swing.JLabel lblContactInfo;
    private javax.swing.JLabel lblContactInfo1;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblEmailAddress1;
    private javax.swing.JLabel lblEmployeeId;
    private javax.swing.JLabel lblEmployeeId1;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblGender1;
    private javax.swing.JLabel lblIImage;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblLevel1;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblPositionTitle;
    private javax.swing.JLabel lblPositionTitle1;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblStartDate1;
    private javax.swing.JLabel lblTeamInfo;
    private javax.swing.JLabel lblTeamInfo1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtAge1;
    private javax.swing.JTextField txtCellPhoneNumber;
    private javax.swing.JTextField txtCellPhoneNumber1;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtEmailAddress1;
    private javax.swing.JTextField txtEmployeeId;
    private javax.swing.JTextField txtEmployeeId1;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtGender1;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtLevel1;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtName1;
    private javax.swing.JTextField txtPositionTitle;
    private javax.swing.JTextField txtPositionTitle1;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtStartDate1;
    private javax.swing.JTextField txtTeamInfo;
    private javax.swing.JTextField txtTeamInfo1;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        model.setRowCount(0);
        
        for (Employee ee : history.getHistory()){
            
            Object[] row = new Object[10];
            row[0] = ee;
            row[1] = ee.getEmployeeId();
            row[2] = ee.getAge();
            row[3] = ee.getGender();
            row[4] = ee.getStartDate();
            row[5] = ee.getLevel();
            row[6] = ee.getTeamInfo();
            row[7] = ee.getPositionTitle();
            row[8] = ee.getCellPhoneNumber();
            row[9] = ee.getEmailAddress();
            
            model.addRow(row);
            
        }
        
        
        
    }
}
